@page "/recipecalc"

<h1><font color=rbg(0,15,128)><br>RECIPE CALCULATOR</font></h1>

<p style="font-size:20px;">Reduce food waste by using leftover products!</p>

<p style="font-size:20px;">Using this page you will be able to enter (or upload) the produce, and we will provide you with endless recipes, where you can use them!</p>
<hr><hr>

<button class="btn btn-primary" @onclick="AddProduct">Add new product</button>

<button class="btn btn-primary" @onclick="SaveList">Save list</button>

<hr>

@code {
    string itemTextField = "";
    string leftTextField = "";
    string unitTextField = "";
    string dateTextField = "";
    List<Model> models = new()
    {
        new Model(){Item="Test", Left = 1, Unit = "grams", Date = "2000-01-02"},
    };

    private void AddProduct()
    {
        if(!(string.IsNullOrEmpty(itemTextField)&&string.IsNullOrEmpty(leftTextField)&&string.IsNullOrEmpty(unitTextField)&&string.IsNullOrEmpty(dateTextField)))
        models.Add(new Model(){Item = itemTextField, Left = Int32.Parse(leftTextField), Unit = unitTextField, Date = dateTextField});
    }

    private void SaveList()
    {
        ;
    } 
}

<table class="table">
    <tr>
        <th>Item</th>
        <th>Left</th>
        <th>Measurement</th>
        <th>Best until</th>
        <th>Delete</th>
    </tr>

@foreach (var model in models)
{
    <tr>
        <td>@model.Item</td>
        <td>@model.Left</td>
        <td>@model.Unit</td> 
        <td>@model.Date</td> 
        <td>
            <button @onclick="() => models.Remove(model)">
                <span class="oi oi-trash" aria-hidden="true"></span>
            </button>  
        </td>
    </tr>
}
</table>

<div>
    <input type = "text" size="10" @bind="@itemTextField" @oninput="(e) => { itemTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> <b>&emsp;&emsp;&emsp;&emsp;</b>
    <input type = "number" @bind="@leftTextField" @oninput="(e) => { leftTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> <b>&emsp;&emsp;</b>
    <select @bind="@unitTextField" @oninput="(e) => { unitTextField = e.Value ==null? string.Empty:(string)e.Value;}" name="unit" id="unit">
                        <option value="grams">g</option>
                        <option value="kilograms">kg</option>
                        <option value="liters">l</option>
                        <option value="milliliters">ml</option>
                        <option value="ounces">oz</option>
                        <option value="units"></option>
                        </select>   <b>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</b>
    <input @oninput="(e) => { dateTextField = e.Value ==null? string.Empty:(string)e.Value;}" type="date" id="bestuntilday" name="bestuntilday" size="1">
</div>


<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
<h3><font color=rbg(24,28,92)><br>font1</font></h3>

<h3><font color="#3a0647"><br>font2</font></h3>

<h3><font color="purple"><br>font3<br></font></h3>
